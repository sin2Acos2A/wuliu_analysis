{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "4a39e626-b141-468e-803c-f3d604794d11",
   "metadata": {},
   "source": [
    "## 分析过程\n",
    "### 一、数据清洗\n",
    "#### 重复值、异常值、格式调整\n",
    "#### 异常值处理\n",
    "### 数据规整\n",
    "#### 比如增加一列辅助列 月份"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "aaa037dd-aa98-49c4-b76f-e98146850d67",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "plt.rcParams['font.sans-serif']='SimHei'## 设置中文显示"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "75988de4-0123-4906-a3e1-c1700d79aabe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1161 entries, 0 to 1160\n",
      "Data columns (total 10 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   订单号     1159 non-null   object \n",
      " 1   订单行     1161 non-null   int64  \n",
      " 2   销售时间    1161 non-null   object \n",
      " 3   交货时间    1161 non-null   object \n",
      " 4   货品交货状况  1159 non-null   object \n",
      " 5   货品      1161 non-null   object \n",
      " 6   货品用户反馈  1161 non-null   object \n",
      " 7   销售区域    1161 non-null   object \n",
      " 8   数量      1157 non-null   float64\n",
      " 9   销售金额    1161 non-null   object \n",
      "dtypes: float64(1), int64(1), object(8)\n",
      "memory usage: 90.8+ KB\n"
     ]
    }
   ],
   "source": [
    "data = pd.read_csv('data_wuliu.csv',encoding='gbk')\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27fd6087-850d-4e17-93e1-ac398c70047e",
   "metadata": {},
   "source": [
    "##### 通过info()可以看出，该数据集有10列，1161行数据，包括名字，数据量，格式等，可以得出：\n",
    "##### 1.订单号，货品交货情况，数量三列数据:存在缺失值，但是缺失量不大，可以删除\n",
    "##### 2.订单行，对分析无关紧要，可以考虑删除\n",
    "##### 3.销售金额数据类型为 object ，数据类型不对 (万元|元，逗号问题),数据类型需要转换成int|float"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ebfe2db2-3502-4a77-b856-bb4b58382b67",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 删除重复值,保留第一条数据\n",
    "data.drop_duplicates(keep='first',inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "529c2bf1-fbd6-478e-9758-bd2faf1f328e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 1152 entries, 0 to 1160\n",
      "Data columns (total 10 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   订单号     1150 non-null   object \n",
      " 1   订单行     1152 non-null   int64  \n",
      " 2   销售时间    1152 non-null   object \n",
      " 3   交货时间    1152 non-null   object \n",
      " 4   货品交货状况  1150 non-null   object \n",
      " 5   货品      1152 non-null   object \n",
      " 6   货品用户反馈  1152 non-null   object \n",
      " 7   销售区域    1152 non-null   object \n",
      " 8   数量      1150 non-null   float64\n",
      " 9   销售金额    1152 non-null   object \n",
      "dtypes: float64(1), int64(1), object(8)\n",
      "memory usage: 99.0+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a870941f-2859-4063-912d-8fb732a2c70b",
   "metadata": {},
   "source": [
    "#### 通过info可以看出该数据集有9条重复数据现已删除"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1aa05cd6-b83a-42d7-871b-c277e4062e02",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 1146 entries, 0 to 1160\n",
      "Data columns (total 10 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   订单号     1146 non-null   object \n",
      " 1   订单行     1146 non-null   int64  \n",
      " 2   销售时间    1146 non-null   object \n",
      " 3   交货时间    1146 non-null   object \n",
      " 4   货品交货状况  1146 non-null   object \n",
      " 5   货品      1146 non-null   object \n",
      " 6   货品用户反馈  1146 non-null   object \n",
      " 7   销售区域    1146 non-null   object \n",
      " 8   数量      1146 non-null   float64\n",
      " 9   销售金额    1146 non-null   object \n",
      "dtypes: float64(1), int64(1), object(8)\n",
      "memory usage: 98.5+ KB\n"
     ]
    }
   ],
   "source": [
    "# 删除缺失值(na,删除带有na的整行数据,按照行删除，how=any是默认值)\n",
    "data.dropna(axis=0,how='any',inplace=True)\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6e4863e-f898-45c1-857d-08ae96b6aa4e",
   "metadata": {},
   "source": [
    "#### 通过info可以看出该数据集有6条缺失数据现已删除"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c4047baa-af5c-4038-810c-09b6473f969e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 1146 entries, 0 to 1160\n",
      "Data columns (total 9 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   订单号     1146 non-null   object \n",
      " 1   销售时间    1146 non-null   object \n",
      " 2   交货时间    1146 non-null   object \n",
      " 3   货品交货状况  1146 non-null   object \n",
      " 4   货品      1146 non-null   object \n",
      " 5   货品用户反馈  1146 non-null   object \n",
      " 6   销售区域    1146 non-null   object \n",
      " 7   数量      1146 non-null   float64\n",
      " 8   销售金额    1146 non-null   object \n",
      "dtypes: float64(1), object(8)\n",
      "memory usage: 89.5+ KB\n"
     ]
    }
   ],
   "source": [
    "# c删除对分析无意义的列订单行\n",
    "data.drop(columns='订单行',inplace=True,axis=1)\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "47f1e829-7f98-43ca-8693-761bdd0ac721",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1146 entries, 0 to 1145\n",
      "Data columns (total 9 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   订单号     1146 non-null   object \n",
      " 1   销售时间    1146 non-null   object \n",
      " 2   交货时间    1146 non-null   object \n",
      " 3   货品交货状况  1146 non-null   object \n",
      " 4   货品      1146 non-null   object \n",
      " 5   货品用户反馈  1146 non-null   object \n",
      " 6   销售区域    1146 non-null   object \n",
      " 7   数量      1146 non-null   float64\n",
      " 8   销售金额    1146 non-null   object \n",
      "dtypes: float64(1), object(8)\n",
      "memory usage: 80.7+ KB\n"
     ]
    }
   ],
   "source": [
    "# 更新索引\n",
    "data.reset_index(drop=True, inplace=True)\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "42625257-8197-430e-acce-d808ce185195",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>订单号</th>\n",
       "      <th>销售时间</th>\n",
       "      <th>交货时间</th>\n",
       "      <th>货品交货状况</th>\n",
       "      <th>货品</th>\n",
       "      <th>货品用户反馈</th>\n",
       "      <th>销售区域</th>\n",
       "      <th>数量</th>\n",
       "      <th>销售金额</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>P096311</td>\n",
       "      <td>2016-7-30</td>\n",
       "      <td>2016-9-30</td>\n",
       "      <td>晚交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华北</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1052,75元</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>P096826</td>\n",
       "      <td>2016-8-30</td>\n",
       "      <td>2016-10-30</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华北</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11,50万元</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>P097435</td>\n",
       "      <td>2016-7-30</td>\n",
       "      <td>2016-9-30</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品1</td>\n",
       "      <td>返修</td>\n",
       "      <td>华南</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6858,77元</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>P097446</td>\n",
       "      <td>2016-11-26</td>\n",
       "      <td>2017-1-26</td>\n",
       "      <td>晚交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华北</td>\n",
       "      <td>15.0</td>\n",
       "      <td>129,58元</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>P097446</td>\n",
       "      <td>2016-11-26</td>\n",
       "      <td>2017-1-26</td>\n",
       "      <td>晚交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>拒货</td>\n",
       "      <td>华北</td>\n",
       "      <td>15.0</td>\n",
       "      <td>32,39元</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1141</th>\n",
       "      <td>P299901</td>\n",
       "      <td>2016-12-15</td>\n",
       "      <td>2017-3-15</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品6</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>马来西亚</td>\n",
       "      <td>2.0</td>\n",
       "      <td>200,41元</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1142</th>\n",
       "      <td>P302956</td>\n",
       "      <td>2016-12-22</td>\n",
       "      <td>2017-3-22</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品2</td>\n",
       "      <td>拒货</td>\n",
       "      <td>华东</td>\n",
       "      <td>20.0</td>\n",
       "      <td>79,44元</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1143</th>\n",
       "      <td>P303801</td>\n",
       "      <td>2016-12-15</td>\n",
       "      <td>2017-3-15</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品2</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华东</td>\n",
       "      <td>1.0</td>\n",
       "      <td>194,08元</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1144</th>\n",
       "      <td>P307276</td>\n",
       "      <td>2016-12-22</td>\n",
       "      <td>2017-3-22</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品6</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>马来西亚</td>\n",
       "      <td>1.0</td>\n",
       "      <td>32,18元</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1145</th>\n",
       "      <td>P314165</td>\n",
       "      <td>2016-12-20</td>\n",
       "      <td>2017-3-20</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品2</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华东</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1720,92元</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1146 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          订单号        销售时间        交货时间 货品交货状况   货品 货品用户反馈  销售区域    数量      销售金额\n",
       "0     P096311   2016-7-30   2016-9-30    晚交货  货品3   质量合格    华北   2.0  1052,75元\n",
       "1     P096826   2016-8-30  2016-10-30   按时交货  货品3   质量合格    华北  10.0   11,50万元\n",
       "2     P097435   2016-7-30   2016-9-30   按时交货  货品1     返修    华南   2.0  6858,77元\n",
       "3     P097446  2016-11-26   2017-1-26    晚交货  货品3   质量合格    华北  15.0   129,58元\n",
       "4     P097446  2016-11-26   2017-1-26    晚交货  货品3     拒货    华北  15.0    32,39元\n",
       "...       ...         ...         ...    ...  ...    ...   ...   ...       ...\n",
       "1141  P299901  2016-12-15   2017-3-15   按时交货  货品6   质量合格  马来西亚   2.0   200,41元\n",
       "1142  P302956  2016-12-22   2017-3-22   按时交货  货品2     拒货    华东  20.0    79,44元\n",
       "1143  P303801  2016-12-15   2017-3-15   按时交货  货品2   质量合格    华东   1.0   194,08元\n",
       "1144  P307276  2016-12-22   2017-3-22   按时交货  货品6   质量合格  马来西亚   1.0    32,18元\n",
       "1145  P314165  2016-12-20   2017-3-20   按时交货  货品2   质量合格    华东   1.0  1720,92元\n",
       "\n",
       "[1146 rows x 9 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "393b0aa4-4ba4-492a-b8b4-7daa1cf8357c",
   "metadata": {},
   "source": [
    "#### 格式调整\n",
    "取出销售金额列，对每一个数据进行清洗  \n",
    "编写自定义过滤函数：删除逗号和元，转成float,如果是是万元还要*10000和删除万"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4796f68f-ae05-4f62-8e9f-925e151a8156",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>订单号</th>\n",
       "      <th>销售时间</th>\n",
       "      <th>交货时间</th>\n",
       "      <th>货品交货状况</th>\n",
       "      <th>货品</th>\n",
       "      <th>货品用户反馈</th>\n",
       "      <th>销售区域</th>\n",
       "      <th>数量</th>\n",
       "      <th>销售金额</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>P096311</td>\n",
       "      <td>2016-7-30</td>\n",
       "      <td>2016-9-30</td>\n",
       "      <td>晚交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华北</td>\n",
       "      <td>2.0</td>\n",
       "      <td>105275.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>P096826</td>\n",
       "      <td>2016-8-30</td>\n",
       "      <td>2016-10-30</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华北</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11500000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>P097435</td>\n",
       "      <td>2016-7-30</td>\n",
       "      <td>2016-9-30</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品1</td>\n",
       "      <td>返修</td>\n",
       "      <td>华南</td>\n",
       "      <td>2.0</td>\n",
       "      <td>685877.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>P097446</td>\n",
       "      <td>2016-11-26</td>\n",
       "      <td>2017-1-26</td>\n",
       "      <td>晚交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华北</td>\n",
       "      <td>15.0</td>\n",
       "      <td>12958.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>P097446</td>\n",
       "      <td>2016-11-26</td>\n",
       "      <td>2017-1-26</td>\n",
       "      <td>晚交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>拒货</td>\n",
       "      <td>华北</td>\n",
       "      <td>15.0</td>\n",
       "      <td>3239.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1141</th>\n",
       "      <td>P299901</td>\n",
       "      <td>2016-12-15</td>\n",
       "      <td>2017-3-15</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品6</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>马来西亚</td>\n",
       "      <td>2.0</td>\n",
       "      <td>20041.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1142</th>\n",
       "      <td>P302956</td>\n",
       "      <td>2016-12-22</td>\n",
       "      <td>2017-3-22</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品2</td>\n",
       "      <td>拒货</td>\n",
       "      <td>华东</td>\n",
       "      <td>20.0</td>\n",
       "      <td>7944.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1143</th>\n",
       "      <td>P303801</td>\n",
       "      <td>2016-12-15</td>\n",
       "      <td>2017-3-15</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品2</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华东</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19408.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1144</th>\n",
       "      <td>P307276</td>\n",
       "      <td>2016-12-22</td>\n",
       "      <td>2017-3-22</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品6</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>马来西亚</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3218.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1145</th>\n",
       "      <td>P314165</td>\n",
       "      <td>2016-12-20</td>\n",
       "      <td>2017-3-20</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品2</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华东</td>\n",
       "      <td>1.0</td>\n",
       "      <td>172092.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1146 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          订单号        销售时间        交货时间 货品交货状况   货品 货品用户反馈  销售区域    数量  \\\n",
       "0     P096311   2016-7-30   2016-9-30    晚交货  货品3   质量合格    华北   2.0   \n",
       "1     P096826   2016-8-30  2016-10-30   按时交货  货品3   质量合格    华北  10.0   \n",
       "2     P097435   2016-7-30   2016-9-30   按时交货  货品1     返修    华南   2.0   \n",
       "3     P097446  2016-11-26   2017-1-26    晚交货  货品3   质量合格    华北  15.0   \n",
       "4     P097446  2016-11-26   2017-1-26    晚交货  货品3     拒货    华北  15.0   \n",
       "...       ...         ...         ...    ...  ...    ...   ...   ...   \n",
       "1141  P299901  2016-12-15   2017-3-15   按时交货  货品6   质量合格  马来西亚   2.0   \n",
       "1142  P302956  2016-12-22   2017-3-22   按时交货  货品2     拒货    华东  20.0   \n",
       "1143  P303801  2016-12-15   2017-3-15   按时交货  货品2   质量合格    华东   1.0   \n",
       "1144  P307276  2016-12-22   2017-3-22   按时交货  货品6   质量合格  马来西亚   1.0   \n",
       "1145  P314165  2016-12-20   2017-3-20   按时交货  货品2   质量合格    华东   1.0   \n",
       "\n",
       "            销售金额  \n",
       "0       105275.0  \n",
       "1     11500000.0  \n",
       "2       685877.0  \n",
       "3        12958.0  \n",
       "4         3239.0  \n",
       "...          ...  \n",
       "1141     20041.0  \n",
       "1142      7944.0  \n",
       "1143     19408.0  \n",
       "1144      3218.0  \n",
       "1145    172092.0  \n",
       "\n",
       "[1146 rows x 9 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def data_deal(money):\n",
    "    if(money.find('万元')!= -1):\n",
    "        new_money = float(money[:money.find('万元')].replace(',',''))*10000 #取出数字删除逗号转换为float类型*10000\n",
    "    else:\n",
    "        new_money = float(money[:money.find('元')].replace(',','')) #取出数字删除逗号转换为float类型\n",
    "    return new_money\n",
    "\n",
    "data['销售金额'] = data['销售金额'].map(data_deal)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "fead6bdc-8ef7-4962-8aba-53fe1b2b117c",
   "metadata": {},
   "outputs": [],
   "source": [
    "### 异常值处理"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "0da70275-5987-4fb8-9977-d8e344b4c785",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>数量</th>\n",
       "      <th>销售金额</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1146.000000</td>\n",
       "      <td>1.146000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>76.069372</td>\n",
       "      <td>1.223488e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>589.416486</td>\n",
       "      <td>1.114599e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.941500e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>9.476500e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.576775e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>11500.000000</td>\n",
       "      <td>3.270000e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 数量          销售金额\n",
       "count   1146.000000  1.146000e+03\n",
       "mean      76.069372  1.223488e+05\n",
       "std      589.416486  1.114599e+06\n",
       "min        1.000000  0.000000e+00\n",
       "25%        1.000000  2.941500e+03\n",
       "50%        1.000000  9.476500e+03\n",
       "75%        4.000000  3.576775e+04\n",
       "max    11500.000000  3.270000e+07"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0661383-1d3a-4e64-a226-0f2f00886d9d",
   "metadata": {},
   "source": [
    "分析： 最小值的销售金额为0，该值为异常值，考虑删除。    \n",
    "平均值和50%分位数 无论是数量还是销售金额都相差较大，数据严重右偏，电商领域2/8很正常，无需处理"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7d868c06-121d-4758-9798-9b8bf7f6da99",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>数量</th>\n",
       "      <th>销售金额</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1145.000000</td>\n",
       "      <td>1.145000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>76.134934</td>\n",
       "      <td>1.224557e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>589.669861</td>\n",
       "      <td>1.115081e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.100000e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.946000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>9.486000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.577300e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>11500.000000</td>\n",
       "      <td>3.270000e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 数量          销售金额\n",
       "count   1145.000000  1.145000e+03\n",
       "mean      76.134934  1.224557e+05\n",
       "std      589.669861  1.115081e+06\n",
       "min        1.000000  5.100000e+01\n",
       "25%        1.000000  2.946000e+03\n",
       "50%        1.000000  9.486000e+03\n",
       "75%        4.000000  3.577300e+04\n",
       "max    11500.000000  3.270000e+07"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 1、销售金额==0采用删除办法因为数据量较小\n",
    "data = data[data['销售金额'] != 0]\n",
    "data.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b30ed13-e824-4fe8-8a8c-ff3443eb0f06",
   "metadata": {},
   "source": [
    "## 数据规整"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "aed90f74-2043-4125-8584-8c557c258033",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\admin\\AppData\\Local\\Temp\\ipykernel_17948\\2985495377.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['销售时间'] = pd.to_datetime(data['销售时间']) # 把销售时间转换为时间数据类型\n",
      "C:\\Users\\admin\\AppData\\Local\\Temp\\ipykernel_17948\\2985495377.py:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['月份'] = data['销售时间'].map(lambda x: x.month)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>订单号</th>\n",
       "      <th>销售时间</th>\n",
       "      <th>交货时间</th>\n",
       "      <th>货品交货状况</th>\n",
       "      <th>货品</th>\n",
       "      <th>货品用户反馈</th>\n",
       "      <th>销售区域</th>\n",
       "      <th>数量</th>\n",
       "      <th>销售金额</th>\n",
       "      <th>月份</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>P096311</td>\n",
       "      <td>2016-07-30</td>\n",
       "      <td>2016-9-30</td>\n",
       "      <td>晚交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华北</td>\n",
       "      <td>2.0</td>\n",
       "      <td>105275.0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>P096826</td>\n",
       "      <td>2016-08-30</td>\n",
       "      <td>2016-10-30</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华北</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11500000.0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>P097435</td>\n",
       "      <td>2016-07-30</td>\n",
       "      <td>2016-9-30</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品1</td>\n",
       "      <td>返修</td>\n",
       "      <td>华南</td>\n",
       "      <td>2.0</td>\n",
       "      <td>685877.0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>P097446</td>\n",
       "      <td>2016-11-26</td>\n",
       "      <td>2017-1-26</td>\n",
       "      <td>晚交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华北</td>\n",
       "      <td>15.0</td>\n",
       "      <td>12958.0</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>P097446</td>\n",
       "      <td>2016-11-26</td>\n",
       "      <td>2017-1-26</td>\n",
       "      <td>晚交货</td>\n",
       "      <td>货品3</td>\n",
       "      <td>拒货</td>\n",
       "      <td>华北</td>\n",
       "      <td>15.0</td>\n",
       "      <td>3239.0</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1141</th>\n",
       "      <td>P299901</td>\n",
       "      <td>2016-12-15</td>\n",
       "      <td>2017-3-15</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品6</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>马来西亚</td>\n",
       "      <td>2.0</td>\n",
       "      <td>20041.0</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1142</th>\n",
       "      <td>P302956</td>\n",
       "      <td>2016-12-22</td>\n",
       "      <td>2017-3-22</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品2</td>\n",
       "      <td>拒货</td>\n",
       "      <td>华东</td>\n",
       "      <td>20.0</td>\n",
       "      <td>7944.0</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1143</th>\n",
       "      <td>P303801</td>\n",
       "      <td>2016-12-15</td>\n",
       "      <td>2017-3-15</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品2</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华东</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19408.0</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1144</th>\n",
       "      <td>P307276</td>\n",
       "      <td>2016-12-22</td>\n",
       "      <td>2017-3-22</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品6</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>马来西亚</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3218.0</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1145</th>\n",
       "      <td>P314165</td>\n",
       "      <td>2016-12-20</td>\n",
       "      <td>2017-3-20</td>\n",
       "      <td>按时交货</td>\n",
       "      <td>货品2</td>\n",
       "      <td>质量合格</td>\n",
       "      <td>华东</td>\n",
       "      <td>1.0</td>\n",
       "      <td>172092.0</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1145 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          订单号       销售时间        交货时间 货品交货状况   货品 货品用户反馈  销售区域    数量  \\\n",
       "0     P096311 2016-07-30   2016-9-30    晚交货  货品3   质量合格    华北   2.0   \n",
       "1     P096826 2016-08-30  2016-10-30   按时交货  货品3   质量合格    华北  10.0   \n",
       "2     P097435 2016-07-30   2016-9-30   按时交货  货品1     返修    华南   2.0   \n",
       "3     P097446 2016-11-26   2017-1-26    晚交货  货品3   质量合格    华北  15.0   \n",
       "4     P097446 2016-11-26   2017-1-26    晚交货  货品3     拒货    华北  15.0   \n",
       "...       ...        ...         ...    ...  ...    ...   ...   ...   \n",
       "1141  P299901 2016-12-15   2017-3-15   按时交货  货品6   质量合格  马来西亚   2.0   \n",
       "1142  P302956 2016-12-22   2017-3-22   按时交货  货品2     拒货    华东  20.0   \n",
       "1143  P303801 2016-12-15   2017-3-15   按时交货  货品2   质量合格    华东   1.0   \n",
       "1144  P307276 2016-12-22   2017-3-22   按时交货  货品6   质量合格  马来西亚   1.0   \n",
       "1145  P314165 2016-12-20   2017-3-20   按时交货  货品2   质量合格    华东   1.0   \n",
       "\n",
       "            销售金额  月份  \n",
       "0       105275.0   7  \n",
       "1     11500000.0   8  \n",
       "2       685877.0   7  \n",
       "3        12958.0  11  \n",
       "4         3239.0  11  \n",
       "...          ...  ..  \n",
       "1141     20041.0  12  \n",
       "1142      7944.0  12  \n",
       "1143     19408.0  12  \n",
       "1144      3218.0  12  \n",
       "1145    172092.0  12  \n",
       "\n",
       "[1145 rows x 10 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 从销售时间中提取出月份\n",
    "data['销售时间'] = pd.to_datetime(data['销售时间']) # 把销售时间转换为时间数据类型\n",
    "# 新增一列存储月份\n",
    "data['月份'] = data['销售时间'].map(lambda x: x.month)\n",
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c2da5d55-fb17-4fe0-a1ef-6c30ab70ce50",
   "metadata": {},
   "source": [
    "## 三数据分析并可视化\n",
    "1、配送服务是否存在问题\n",
    "### a.月份维度"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "c33734ac-b012-4fe2-8e4f-fb02bbb3ba38",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\admin\\AppData\\Local\\Temp\\ipykernel_17948\\1538856180.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['货品交货状况'] = data['货品交货状况'].str.strip()\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>货品交货状况</th>\n",
       "      <th>按时交货</th>\n",
       "      <th>晚交货</th>\n",
       "      <th>按时交货货率</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>月份</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>189</td>\n",
       "      <td>13</td>\n",
       "      <td>0.935644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>218</td>\n",
       "      <td>35</td>\n",
       "      <td>0.861660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>122</td>\n",
       "      <td>9</td>\n",
       "      <td>0.931298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>238</td>\n",
       "      <td>31</td>\n",
       "      <td>0.884758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>101</td>\n",
       "      <td>25</td>\n",
       "      <td>0.801587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>146</td>\n",
       "      <td>18</td>\n",
       "      <td>0.890244</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "货品交货状况  按时交货  晚交货    按时交货货率\n",
       "月份                         \n",
       "7        189   13  0.935644\n",
       "8        218   35  0.861660\n",
       "9        122    9  0.931298\n",
       "10       238   31  0.884758\n",
       "11       101   25  0.801587\n",
       "12       146   18  0.890244"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 去掉首尾空格\n",
    "data['货品交货状况'] = data['货品交货状况'].str.strip()\n",
    "data_month = data.groupby(['月份','货品交货状况']).size().unstack() # unstack() 将月份设为行索引货物交货情况按时交货和晚交货设为列索引\n",
    "data_month['按时交货货率'] = data_month['按时交货']/(data_month['按时交货']+data_month['晚交货'])\n",
    "data_month\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02c5dfdd-d777-4b8d-bd14-5aaa70453d09",
   "metadata": {},
   "source": [
    "关键分析维度   \n",
    "数量波动分析：11月交货总量显著下降（135)  \n",
    "准时率趋势：  \n",
    "整体准时率保持在80%以上  \n",
    "11月准时率最低（80.16%）,整体第四季度比第三季度准时率低，可能存在季节性因素  "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b90bdee8-b6ab-42dc-a079-1b45fa094d61",
   "metadata": {},
   "source": [
    "###  b.销售区域维度"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3b38c6fe-362d-4dac-be26-e1d0b9d46683",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>货品交货状况</th>\n",
       "      <th>按时交货</th>\n",
       "      <th>晚交货</th>\n",
       "      <th>按时交货货率</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>销售区域</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>华东</th>\n",
       "      <td>268</td>\n",
       "      <td>39</td>\n",
       "      <td>0.872964</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>华北</th>\n",
       "      <td>226</td>\n",
       "      <td>27</td>\n",
       "      <td>0.893281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>华南</th>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>0.909091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>泰国</th>\n",
       "      <td>183</td>\n",
       "      <td>4</td>\n",
       "      <td>0.978610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>西北</th>\n",
       "      <td>17</td>\n",
       "      <td>44</td>\n",
       "      <td>0.278689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>马来西亚</th>\n",
       "      <td>310</td>\n",
       "      <td>16</td>\n",
       "      <td>0.950920</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "货品交货状况  按时交货  晚交货    按时交货货率\n",
       "销售区域                       \n",
       "华东       268   39  0.872964\n",
       "华北       226   27  0.893281\n",
       "华南        10    1  0.909091\n",
       "泰国       183    4  0.978610\n",
       "西北        17   44  0.278689\n",
       "马来西亚     310   16  0.950920"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_sal = data.groupby(['销售区域','货品交货状况']).size().unstack() # unstack() 将月份设为行索引货物交货情况按时交货和晚交货设为列索引\n",
    "data_sal['按时交货货率'] = data_sal['按时交货']/(data_sal['按时交货']+data_sal['晚交货'])\n",
    "data_sal\n",
    "# 西北地区存在突出的延时交货问题急需解决"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a4411de-f190-41c6-b704-d4a6cd614021",
   "metadata": {},
   "source": [
    "### c.货品维度"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "bfabc788-e684-436f-bc5a-60f8ce8b9f5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>货品交货状况</th>\n",
       "      <th>按时交货</th>\n",
       "      <th>晚交货</th>\n",
       "      <th>按时交货货率</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>货品5</th>\n",
       "      <td>183</td>\n",
       "      <td>4</td>\n",
       "      <td>0.978610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品6</th>\n",
       "      <td>309</td>\n",
       "      <td>7</td>\n",
       "      <td>0.977848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品1</th>\n",
       "      <td>27</td>\n",
       "      <td>2</td>\n",
       "      <td>0.931034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品3</th>\n",
       "      <td>212</td>\n",
       "      <td>26</td>\n",
       "      <td>0.890756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品2</th>\n",
       "      <td>269</td>\n",
       "      <td>48</td>\n",
       "      <td>0.848580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品4</th>\n",
       "      <td>14</td>\n",
       "      <td>44</td>\n",
       "      <td>0.241379</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "货品交货状况  按时交货  晚交货    按时交货货率\n",
       "货品                         \n",
       "货品5      183    4  0.978610\n",
       "货品6      309    7  0.977848\n",
       "货品1       27    2  0.931034\n",
       "货品3      212   26  0.890756\n",
       "货品2      269   48  0.848580\n",
       "货品4       14   44  0.241379"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_goods = data.groupby(['货品','货品交货状况']).size().unstack() # unstack() 将月份设为行索引货物交货情况按时交货和晚交货设为列索引\n",
    "data_goods['按时交货货率'] = data_goods['按时交货']/(data_goods['按时交货']+data_goods['晚交货'])\n",
    "data_goods.sort_values(by='按时交货货率',ascending=False)\n",
    "#货品4存在突出的延时交货问题急需解决，货品2的问题也需要注意。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03fbd0d3-7723-4cd8-b32d-49197e475d45",
   "metadata": {},
   "source": [
    "### d.货品和销售区域结合"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0591f116-91cf-486c-93db-747c555ad3c1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>货品交货状况</th>\n",
       "      <th>按时交货</th>\n",
       "      <th>晚交货</th>\n",
       "      <th>按时交货货率</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品</th>\n",
       "      <th>销售区域</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>货品1</th>\n",
       "      <th>西北</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品5</th>\n",
       "      <th>泰国</th>\n",
       "      <td>183</td>\n",
       "      <td>4</td>\n",
       "      <td>0.978610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品6</th>\n",
       "      <th>马来西亚</th>\n",
       "      <td>309</td>\n",
       "      <td>7</td>\n",
       "      <td>0.977848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">货品1</th>\n",
       "      <th>华北</th>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>0.933333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>华南</th>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>0.909091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品3</th>\n",
       "      <th>华北</th>\n",
       "      <td>212</td>\n",
       "      <td>26</td>\n",
       "      <td>0.890756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品2</th>\n",
       "      <th>华东</th>\n",
       "      <td>268</td>\n",
       "      <td>39</td>\n",
       "      <td>0.872964</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品4</th>\n",
       "      <th>西北</th>\n",
       "      <td>14</td>\n",
       "      <td>44</td>\n",
       "      <td>0.241379</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品2</th>\n",
       "      <th>马来西亚</th>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0.100000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "货品交货状况    按时交货  晚交货    按时交货货率\n",
       "货品  销售区域                     \n",
       "货品1 西北       3    0  1.000000\n",
       "货品5 泰国     183    4  0.978610\n",
       "货品6 马来西亚   309    7  0.977848\n",
       "货品1 华北      14    1  0.933333\n",
       "    华南      10    1  0.909091\n",
       "货品3 华北     212   26  0.890756\n",
       "货品2 华东     268   39  0.872964\n",
       "货品4 西北      14   44  0.241379\n",
       "货品2 马来西亚     1    9  0.100000"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_goods_sal = data.groupby(['货品','销售区域','货品交货状况']).size().unstack(fill_value=0) # unstack() 将月份设为行索引货物交货情况按时交货和晚交货设为列索引\n",
    "data_goods_sal['按时交货货率'] = data_goods_sal['按时交货']/(data_goods_sal['按时交货']+data_goods_sal['晚交货'])\n",
    "data_goods_sal.sort_values(by='按时交货货率',ascending=False)\n",
    "# 销售区域：西北地区延时交货问题,主要是货品4晚交货导致\n",
    "# 货品：最差的货品2送往马来西亚的晚送货问题突出"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f13205c-a6fc-4b61-8a9e-9d61fe9e11dc",
   "metadata": {},
   "source": [
    "### 2、是否存在尚有潜力的销售区域\n",
    "a.月份维度"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "9ba1a0ee-9d27-482b-9439-71e962efe880",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='月份'>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data1 = data.groupby(['月份','货品'])['数量'].sum().unstack(fill_value=0) # unstack() 将月份设为行索引货物交货情况按时交货和晚交货设为列索引\n",
    "data1.plot(kind='line') # 货品2在10月和12月销量猛增原因猜测有二1、公司加大营销力度，2、开发了新的市场"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8da0e05-56eb-44cc-84ea-eb35b8bbcc5b",
   "metadata": {},
   "source": [
    "### b.不同区域"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8e64d311-49b7-41da-aaa2-ba585ebc389b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>货品</th>\n",
       "      <th>货品1</th>\n",
       "      <th>货品2</th>\n",
       "      <th>货品3</th>\n",
       "      <th>货品4</th>\n",
       "      <th>货品5</th>\n",
       "      <th>货品6</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>销售区域</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>华东</th>\n",
       "      <td>0.0</td>\n",
       "      <td>53811.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>华北</th>\n",
       "      <td>2827.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9073.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>华南</th>\n",
       "      <td>579.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>泰国</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5733.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>西北</th>\n",
       "      <td>11.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5229.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>马来西亚</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1510.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8401.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "货品       货品1      货品2     货品3     货品4     货品5     货品6\n",
       "销售区域                                                 \n",
       "华东       0.0  53811.0     0.0     0.0     0.0     0.0\n",
       "华北    2827.0      0.0  9073.5     0.0     0.0     0.0\n",
       "华南     579.0      0.0     0.0     0.0     0.0     0.0\n",
       "泰国       0.0      0.0     0.0     0.0  5733.0     0.0\n",
       "西北      11.0      0.0     0.0  5229.0     0.0     0.0\n",
       "马来西亚     0.0   1510.0     0.0     0.0     0.0  8401.0"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1 = data.groupby(['销售区域','货品'])['数量'].sum().unstack(fill_value=0)\n",
    "data1\n",
    "# 从销售区域看每种货品的销售区域为1-3个货品1有三个销售区域，货品2有2个销售区域其他货品销售区域都是一个"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c57b61e0-d394-4507-b2d2-829864a978cd",
   "metadata": {},
   "source": [
    "### c.月份和区域"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "de680676-18fe-4168-b251-db5850cf0948",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "月份  销售区域\n",
       "7   华东        489.0\n",
       "    华北          0.0\n",
       "    华南          0.0\n",
       "    泰国          0.0\n",
       "    西北          0.0\n",
       "    马来西亚        2.0\n",
       "8   华东       1640.0\n",
       "    华北          0.0\n",
       "    华南          0.0\n",
       "    泰国          0.0\n",
       "    西北          0.0\n",
       "    马来西亚     1503.0\n",
       "9   华东       3019.0\n",
       "    华北          0.0\n",
       "    华南          0.0\n",
       "    泰国          0.0\n",
       "    西北          0.0\n",
       "    马来西亚        1.0\n",
       "10  华东      28420.0\n",
       "    华北          0.0\n",
       "    泰国          0.0\n",
       "    西北          0.0\n",
       "    马来西亚        0.0\n",
       "11  华东       2041.0\n",
       "    华北          0.0\n",
       "    华南          0.0\n",
       "    泰国          0.0\n",
       "    西北          0.0\n",
       "    马来西亚        1.0\n",
       "12  华东      18202.0\n",
       "    华北          0.0\n",
       "    华南          0.0\n",
       "    泰国          0.0\n",
       "    西北          0.0\n",
       "    马来西亚        3.0\n",
       "Name: 货品2, dtype: float64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1 = data.groupby(['月份','销售区域','货品'])['数量'].sum().unstack(fill_value=0)\n",
    "data1['货品2']\n",
    "#货品2在10，12月份销量猛增，原因主要发生在原有销售区域(华东\n",
    "#同样，分析出在7，8，9，11月份销售数量还有很大提升空间，可以适当加大营销力度"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b86c53d0-3924-4066-9752-55d349beeaa1",
   "metadata": {},
   "source": [
    "### 3、商品是否存在质量问题"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "709bd74b-48f3-4a99-ae60-c8311286b9bf",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\admin\\AppData\\Local\\Temp\\ipykernel_17948\\1439624083.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['货品用户反馈'] = data['货品用户反馈'].str.strip() #去除首尾空格\n"
     ]
    }
   ],
   "source": [
    "data['货品用户反馈'] = data['货品用户反馈'].str.strip() #去除首尾空格\n",
    "data1 = data.groupby(['货品','销售区域'])['货品用户反馈'].value_counts().unstack(fill_value=0)\n",
    "data1['拒货率'] = round(data1['拒货']/data1.sum(axis=1),2)\n",
    "data1['合格率'] = round(data1['质量合格']/data1.sum(axis=1),2)\n",
    "data1['返修率'] = round(data1['返修']/data1.sum(axis=1),2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "73c8cf81-fd20-41b3-bb36-cbbbe0805faf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>货品用户反馈</th>\n",
       "      <th>拒货</th>\n",
       "      <th>质量合格</th>\n",
       "      <th>返修</th>\n",
       "      <th>拒货率</th>\n",
       "      <th>合格率</th>\n",
       "      <th>返修率</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品</th>\n",
       "      <th>销售区域</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>货品3</th>\n",
       "      <th>华北</th>\n",
       "      <td>31</td>\n",
       "      <td>188</td>\n",
       "      <td>19</td>\n",
       "      <td>0.13</td>\n",
       "      <td>0.79</td>\n",
       "      <td>0.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品6</th>\n",
       "      <th>马来西亚</th>\n",
       "      <td>56</td>\n",
       "      <td>246</td>\n",
       "      <td>14</td>\n",
       "      <td>0.18</td>\n",
       "      <td>0.78</td>\n",
       "      <td>0.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品5</th>\n",
       "      <th>泰国</th>\n",
       "      <td>14</td>\n",
       "      <td>144</td>\n",
       "      <td>29</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.77</td>\n",
       "      <td>0.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品2</th>\n",
       "      <th>华东</th>\n",
       "      <td>72</td>\n",
       "      <td>184</td>\n",
       "      <td>51</td>\n",
       "      <td>0.23</td>\n",
       "      <td>0.60</td>\n",
       "      <td>0.17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">货品1</th>\n",
       "      <th>华南</th>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.35</td>\n",
       "      <td>0.17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>西北</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.33</td>\n",
       "      <td>0.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>华北</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品4</th>\n",
       "      <th>西北</th>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>49</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>货品2</th>\n",
       "      <th>马来西亚</th>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.60</td>\n",
       "      <td>0.09</td>\n",
       "      <td>0.28</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "货品用户反馈    拒货  质量合格  返修   拒货率   合格率   返修率\n",
       "货品  销售区域                                \n",
       "货品3 华北    31   188  19  0.13  0.79  0.08\n",
       "货品6 马来西亚  56   246  14  0.18  0.78  0.04\n",
       "货品5 泰国    14   144  29  0.07  0.77  0.15\n",
       "货品2 华东    72   184  51  0.23  0.60  0.17\n",
       "货品1 华南     5     4   2  0.45  0.35  0.17\n",
       "    西北     0     1   2  0.00  0.33  0.60\n",
       "    华北     0     3  12  0.00  0.20  0.79\n",
       "货品4 西北     0     9  49  0.00  0.16  0.84\n",
       "货品2 马来西亚   6     1   3  0.60  0.09  0.28"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.sort_values(['合格率','返修率','拒货率'],ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "2cd87b88-ff4f-41ab-b2b4-126a8e43329a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#货品3.6.5合格率均较高，返修率比较低，说明质量还可以\n",
    "#货品1.2.4合格率较低，返修率较高，质量存在一定的问题，需要改善\n",
    "#货品2在马拉西亚的把货率最高，同时，在货品2在马拉西亚的按时交货率也非常低。猜测:马来西亚入对送货的时效性要求较高,如果达不到，则往往考虑拒货。\n",
    "#考虑到货品2主要在华东地区销售量大，可以考虑增大在华东的投资，适当较小马来西亚的投入。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9c495918-0f9e-4339-b190-0c709de44446",
   "metadata": {},
   "outputs": [],
   "source": [
    "pip install nbconver"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1162863e-dbfe-4ebf-9cf4-9e60fe5783f6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
